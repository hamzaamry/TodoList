{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport { useAuthContext } from './useAuthContext';\nexport const useSignup = () => {\n  _s();\n  const [error, setError] = useState(null);\n  const [IsLoading, setIsLoading] = useState(null);\n  const {\n    dispatch\n  } = useAuthContext();\n  const signup = async (Email, password) => {\n    setIsLoading(true);\n    setError(null);\n    const response = await fetch(' http://localhost:8000/api/user/signup', {\n      method: 'POST',\n      headers: {\n        'content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        Email,\n        password\n      })\n    });\n    if (!response.ok) {\n      setIsLoading(false);\n      setError(json.error);\n    }\n    if (response.ok) {\n      //save the user to local storage\n      localStorage.setItem('user', JSON.stringify(json));\n      //update the auth context\n      dispatch({\n        type: 'LOGIN',\n        payload: json\n      });\n    }\n  };\n  return {\n    signup,\n    IsLoading,\n    error\n  };\n};\n_s(useSignup, \"4F/okIFNJT+V/lSvmigF8N5Z7sM=\", false, function () {\n  return [useAuthContext];\n});","map":{"version":3,"names":["useState","useAuthContext","useSignup","_s","error","setError","IsLoading","setIsLoading","dispatch","signup","Email","password","response","fetch","method","headers","body","JSON","stringify","ok","json","localStorage","setItem","type","payload"],"sources":["C:/Users/hamza/Desktop/projects/TODO_MERN/client/src/hooks/useSignup.js"],"sourcesContent":["import { useState } from \"react\";\r\nimport { useAuthContext } from './useAuthContext'\r\n\r\nexport const useSignup = () => {\r\n    const [error , setError] = useState(null)\r\n    const [IsLoading , setIsLoading] = useState(null)\r\n    const {dispatch} = useAuthContext()\r\n\r\n    const signup = async (Email , password) => {\r\n        setIsLoading(true)\r\n        setError(null)\r\n\r\n        const response = await fetch(' http://localhost:8000/api/user/signup' , {\r\n            method: 'POST' , \r\n            headers: { 'content-Type': 'application/json' } ,\r\n            body: JSON.stringify({Email , password})\r\n        })\r\n\r\n        if(!response.ok) {\r\n            setIsLoading(false)\r\n            setError(json.error)\r\n        }\r\n        if(response.ok) {\r\n            //save the user to local storage\r\n            localStorage.setItem('user' , JSON.stringify(json))\r\n            //update the auth context\r\n            dispatch({type: 'LOGIN' , payload: json })\r\n        }\r\n    }\r\n\r\n    return { signup , IsLoading , error}\r\n}"],"mappings":";AAAA,SAASA,QAAQ,QAAQ,OAAO;AAChC,SAASC,cAAc,QAAQ,kBAAkB;AAEjD,OAAO,MAAMC,SAAS,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC3B,MAAM,CAACC,KAAK,EAAGC,QAAQ,CAAC,GAAGL,QAAQ,CAAC,IAAI,CAAC;EACzC,MAAM,CAACM,SAAS,EAAGC,YAAY,CAAC,GAAGP,QAAQ,CAAC,IAAI,CAAC;EACjD,MAAM;IAACQ;EAAQ,CAAC,GAAGP,cAAc,EAAE;EAEnC,MAAMQ,MAAM,GAAG,MAAAA,CAAOC,KAAK,EAAGC,QAAQ,KAAK;IACvCJ,YAAY,CAAC,IAAI,CAAC;IAClBF,QAAQ,CAAC,IAAI,CAAC;IAEd,MAAMO,QAAQ,GAAG,MAAMC,KAAK,CAAC,wCAAwC,EAAG;MACpEC,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QAAE,cAAc,EAAE;MAAmB,CAAC;MAC/CC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;QAACR,KAAK;QAAGC;MAAQ,CAAC;IAC3C,CAAC,CAAC;IAEF,IAAG,CAACC,QAAQ,CAACO,EAAE,EAAE;MACbZ,YAAY,CAAC,KAAK,CAAC;MACnBF,QAAQ,CAACe,IAAI,CAAChB,KAAK,CAAC;IACxB;IACA,IAAGQ,QAAQ,CAACO,EAAE,EAAE;MACZ;MACAE,YAAY,CAACC,OAAO,CAAC,MAAM,EAAGL,IAAI,CAACC,SAAS,CAACE,IAAI,CAAC,CAAC;MACnD;MACAZ,QAAQ,CAAC;QAACe,IAAI,EAAE,OAAO;QAAGC,OAAO,EAAEJ;MAAK,CAAC,CAAC;IAC9C;EACJ,CAAC;EAED,OAAO;IAAEX,MAAM;IAAGH,SAAS;IAAGF;EAAK,CAAC;AACxC,CAAC;AAAAD,EAAA,CA5BYD,SAAS;EAAA,QAGCD,cAAc;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}