{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\hamza\\\\Desktop\\\\projects\\\\TODO_MERN (Not completed)\\\\client\\\\src\\\\pages\\\\Login.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useContext } from 'react';\n//import { useHistory } from 'react-router-dom';\nimport { AuthContext } from '../context/AuthContext';\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Login = () => {\n  _s();\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const {\n    login\n  } = useContext(AuthContext);\n  const Navigate = useNavigate();\n  const handleSubmit = async e => {\n    e.preventDefault();\n    const response = await fetch('http://localhost:8000/api/users/login', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        email,\n        password\n      })\n    });\n    const data = await response.json();\n    if (response.ok) {\n      login(data.result, data.token);\n      Navigate(`/create-todo`);\n      //history.push('/');\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"email\",\n      placeholder: \"Email\",\n      value: email,\n      onChange: e => setEmail(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"password\",\n      placeholder: \"Password\",\n      value: password,\n      onChange: e => setPassword(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 3\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      children: \"Log in\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 3\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n};\n_s(Login, \"TIBQDcSzO/ZoGsd0tXypQRch1zo=\", false, function () {\n  return [useNavigate];\n});\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useState","useContext","AuthContext","useNavigate","jsxDEV","_jsxDEV","Login","_s","email","setEmail","password","setPassword","login","Navigate","handleSubmit","e","preventDefault","response","fetch","method","headers","body","JSON","stringify","data","json","ok","result","token","onSubmit","children","type","placeholder","value","onChange","target","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/hamza/Desktop/projects/TODO_MERN (Not completed)/client/src/pages/Login.js"],"sourcesContent":["import React, { useState, useContext } from 'react';\r\n//import { useHistory } from 'react-router-dom';\r\nimport { AuthContext } from '../context/AuthContext';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nconst Login = () => {\r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const { login } = useContext(AuthContext);\r\n  const Navigate = useNavigate();\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n\r\n    const response = await fetch('http://localhost:8000/api/users/login', {\r\n      method: 'POST',\r\n      headers: { 'Content-Type': 'application/json' },\r\n      body: JSON.stringify({ email, password }),\r\n    });\r\n\r\n    const data = await response.json();\r\n\r\n    if (response.ok) {\r\n      login(data.result, data.token);\r\n      Navigate(`/create-todo`);\r\n      //history.push('/');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      <input    type=\"email\"\r\n    placeholder=\"Email\"\r\n    value={email}\r\n    onChange={(e) => setEmail(e.target.value)}\r\n  />\r\n  <input\r\n    type=\"password\"\r\n    placeholder=\"Password\"\r\n    value={password}\r\n    onChange={(e) => setPassword(e.target.value)}\r\n  />\r\n  <button type=\"submit\">Log in</button>\r\n</form>\r\n);\r\n};\r\n\r\nexport default Login;\r\n       \r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,UAAU,QAAQ,OAAO;AACnD;AACA,SAASC,WAAW,QAAQ,wBAAwB;AACpD,SAASC,WAAW,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE/C,MAAMC,KAAK,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAClB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACU,QAAQ,EAAEC,WAAW,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM;IAAEY;EAAM,CAAC,GAAGX,UAAU,CAACC,WAAW,CAAC;EACzC,MAAMW,QAAQ,GAAGV,WAAW,EAAE;EAE9B,MAAMW,YAAY,GAAG,MAAOC,CAAC,IAAK;IAChCA,CAAC,CAACC,cAAc,EAAE;IAElB,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,uCAAuC,EAAE;MACpEC,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QAAE,cAAc,EAAE;MAAmB,CAAC;MAC/CC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;QAAEf,KAAK;QAAEE;MAAS,CAAC;IAC1C,CAAC,CAAC;IAEF,MAAMc,IAAI,GAAG,MAAMP,QAAQ,CAACQ,IAAI,EAAE;IAElC,IAAIR,QAAQ,CAACS,EAAE,EAAE;MACfd,KAAK,CAACY,IAAI,CAACG,MAAM,EAAEH,IAAI,CAACI,KAAK,CAAC;MAC9Bf,QAAQ,CAAE,cAAa,CAAC;MACxB;IACF;EACF,CAAC;;EAED,oBACER,OAAA;IAAMwB,QAAQ,EAAEf,YAAa;IAAAgB,QAAA,gBAC3BzB,OAAA;MAAU0B,IAAI,EAAC,OAAO;MACxBC,WAAW,EAAC,OAAO;MACnBC,KAAK,EAAEzB,KAAM;MACb0B,QAAQ,EAAGnB,CAAC,IAAKN,QAAQ,CAACM,CAAC,CAACoB,MAAM,CAACF,KAAK;IAAE;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAC1C,eACFlC,OAAA;MACE0B,IAAI,EAAC,UAAU;MACfC,WAAW,EAAC,UAAU;MACtBC,KAAK,EAAEvB,QAAS;MAChBwB,QAAQ,EAAGnB,CAAC,IAAKJ,WAAW,CAACI,CAAC,CAACoB,MAAM,CAACF,KAAK;IAAE;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAC7C,eACFlC,OAAA;MAAQ0B,IAAI,EAAC,QAAQ;MAAAD,QAAA,EAAC;IAAM;MAAAM,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAS;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QAChC;AAEP,CAAC;AAAChC,EAAA,CAxCID,KAAK;EAAA,QAIQH,WAAW;AAAA;AAAAqC,EAAA,GAJxBlC,KAAK;AA0CX,eAAeA,KAAK;AAAC,IAAAkC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}